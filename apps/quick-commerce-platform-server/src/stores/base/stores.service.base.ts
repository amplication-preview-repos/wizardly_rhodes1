/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Stores as PrismaStores } from "@prisma/client";

export class StoresServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StoresCountArgs, "select">): Promise<number> {
    return this.prisma.stores.count(args);
  }

  async storesItems(args: Prisma.StoresFindManyArgs): Promise<PrismaStores[]> {
    return this.prisma.stores.findMany(args);
  }
  async stores(
    args: Prisma.StoresFindUniqueArgs
  ): Promise<PrismaStores | null> {
    return this.prisma.stores.findUnique(args);
  }
  async createStores(args: Prisma.StoresCreateArgs): Promise<PrismaStores> {
    return this.prisma.stores.create(args);
  }
  async updateStores(args: Prisma.StoresUpdateArgs): Promise<PrismaStores> {
    return this.prisma.stores.update(args);
  }
  async deleteStores(args: Prisma.StoresDeleteArgs): Promise<PrismaStores> {
    return this.prisma.stores.delete(args);
  }
}
